name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Setup and install tools
        run: |
          python -m pip install --upgrade black
      - name: black format check
        run: black --check --line-length 120 radish/ tests/ setup.py

  test:
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        python-version: [3.7, 3.12]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-20.04
            python-version: 3.6

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup build and test environment
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Build Python Package
        run: |
          python -m pip install -r requirements-dev.txt
      - name: Update pytest on >= Python3.10
        if: ${{ matrix.python-version == '3.12' }}
        run: |
          python -m pip install pytest==7.0.1
      - name: Unit Test with pytest
        run: |
          coverage run -p --source radish -m pytest tests/unit/ --junitxml=junit/unit-test-results.xml
      - name: Functional Test with pytest
        run: |
          coverage run -p --source radish -m pytest tests/functional/ --junitxml=junit/functional-test-results.xml
      - name: Integration Test with pytest
        run: |
          coverage run -p --source radish -m pytest tests/integration/ --junitxml=junit/integration-test-results.xml
        env:
          PYTHONIOENCODING: UTF-8
      - name: Report code coverage
        run: |
          coverage combine
          coverage report
          coverage xml
          coverage html
      - name: Upload coverage to Codecov
        # codecov only runs on Linux
        if: startsWith(matrix.os, 'ubuntu-')
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
